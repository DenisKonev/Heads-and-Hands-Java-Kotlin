package solution;

import game.Game;

/*
 * Проект состоит из 8 различных классов, перечислений и интерфейсов, которые сгруппированы по трем разным пакетам.
 * Solution - основной класс для создания экземпляра класса и запуска игры.
 * Game - класс, в котором обрабатывается пользовательский ввод, создаются экземпляры игрока и монстра, а так же выполняются методы для симуляции боя.
 * IncorrectInputException - кастомное исключение, которое может выбросить метод getUserInput() в классе Game если пользователь введет некорректные данные.
 * Creature - абстрактный класс, в котором частично реализована логика классов наследников: Player и Monster.
 * Player - класс описывающий состояния и действия игрока. Implements интерфейс Healable.
 * Healable - интерфейс, который сообщает нам о том что класс может лечиться. Содержит сигнатуру метода heal().
 * Monster - класс описывающий состояния и действия монстра. Использует перечисление MonsterType чтобы выбрать имя монстра случайным образом.
 * MonsterType - перечисление, содержащее имена монстров и метод randomMonsterType() для случайного выбора одного из этих имен.
 */
public class Solution {
    public static void main(String[] args) {
        Game game = new Game();
        if (game.getUserInput())
            game.startGame();
    }
}